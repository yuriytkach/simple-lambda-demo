version: 2.1

orbs:
  aws-cli: circleci/aws-cli@3.1

jobs:
  build_and_test:
    environment:
      # Configure the JVM and Gradle to avoid OOM errors
      _JAVA_OPTIONS: "-Xmx3g"
      GRADLE_OPTS: "-Dorg.gradle.daemon=false -Dorg.gradle.workers.max=2"
    docker:
      - image: circleci/openjdk:17-jdk-buster
    steps:
      - checkout
      - restore_cache:
          key: v1-gradle-wrapper-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}
      - restore_cache:
          key: v1-gradle-cache-{{ checksum "build.gradle" }}
      - run:
          name: Build
          command: ./gradlew build -x test
      - run:
          name: Test
          command: ./gradlew test
      - store_test_results:
          path: build/test-results/test
      - store_artifacts:
          path: build/test-results/test
          when: always
      - store_artifacts:
          path: build/reports/jacoco/test/html
          when: always
      - save_cache:
          paths:
            - ~/.gradle/wrapper
          key: v1-gradle-wrapper-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}
      - save_cache:
          paths:
            - ~/.gradle/caches
          key: v1-gradle-cache-{{ checksum "build.gradle" }}
      - persist_to_workspace:
          root: build
          paths:
            - function.zip

  deploy:
    executor: aws-cli/default
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - aws-cli/setup:
          aws-access-key-id: AWS_ACCESS_KEY_ID
          aws-secret-access-key: AWS_SECRET_ACCESS_KEY
          aws-region: AWS_REGION
      - run:
          name: Deploy function.zip to AWS Lambda
          command: |
            RELEASE_TAG=release-circleci-${CIRCLE_BUILD_NUM}
            aws lambda update-function-code --function-name bbb --zip-file fileb:///tmp/workspace/function.zip --publish --region eu-west-1
            aws lambda tag-resource --resource arn:aws:lambda:eu-west-1:330065802977:function:bbb --tags release=${RELEASE_TAG}

workflows:
  version: 2
  build-test-deploy:
    jobs:
      - build_and_test
      - deploy:
          context: aws-root-key
          requires:
            - build_and_test
          filters:
            branches:
              only: main
